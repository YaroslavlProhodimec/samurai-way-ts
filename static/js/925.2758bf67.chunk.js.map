{"version":3,"file":"static/js/925.2758bf67.chunk.js","mappings":"2SAEMA,EAAY,IAAIC,UAAU,gEAenBC,EAAgB,WACzB,OAAO,4BACH,SAACC,EAAD,KACA,SAACC,EAAD,QAGKD,EAAoB,WAC7B,OAAgCE,EAAAA,EAAAA,UAA4B,IAA5D,eAAQC,EAAR,KAAiBC,EAAjB,KAWA,OATAC,EAAAA,EAAAA,YAAU,WACNR,EAAUS,iBAAiB,WAAU,SAACC,GAClC,IAAIC,EAAeC,KAAKC,MAAMH,EAAEI,MAChCP,GAAY,SAACQ,GAAD,wBAAsBA,IAAtB,OAAsCJ,YAGxD,KAGK,gBAAKK,MAAO,CAACC,OAAO,QAAQC,SAAS,QAArC,SACFZ,EAASa,KAAI,SAACC,EAAEC,GAAH,OAAW,SAACC,EAAD,CAAqBC,QAASH,GAAhBC,SAKlCC,EAA8C,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAGzD,OAAO,4BACH,gBAAKC,IAAKD,EAAQE,QADf,KACyB,uBAAIF,EAAQG,YACxC,kBACCH,EAAQA,SACT,sBAIKnB,EAA8B,WACvC,OAA6BC,EAAAA,EAAAA,UAAS,IAAtC,eAAOkB,EAAP,KAAeI,EAAf,KASA,OAAO,4BACH,0BACA,qBAAUC,SAAU,SAAClB,GAAD,OAAMiB,EAAWjB,EAAEmB,cAAcC,QAASC,KAAK,QACnE,0BACA,mBAAQC,QAZQ,WACZT,IAGJvB,EAAUiC,KAAKV,GACfI,EAAW,MAOX,wBAGR,UA3D4B,WACxB,OACI,0BACR,SAACzB,EAAD","sources":["pages/Chat/ChatPage.tsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\n\r\nconst wsChannel = new WebSocket('wss://social-network.samuraijs.com/handlers/ChatHandler.ashx')\r\nexport type ChatMessageType = {\r\n    message:string\r\n    photo:string\r\n    userId:number\r\n    userName:string\r\n}\r\n\r\n  const ChatPage:React.FC = () => {\r\n    return (\r\n        <div>\r\n<Chat/>\r\n        </div>\r\n    );\r\n};\r\nexport const Chat:React.FC = () => {\r\n    return <div>\r\n        <Messages/>\r\n        <AddMessageFormChat/>\r\n    </div>\r\n}\r\nexport const Messages:React.FC = () => {\r\n    const  [messages,setMessages] = useState<ChatMessageType[]>([])\r\n\r\n    useEffect(() => {\r\n        wsChannel.addEventListener('message',(e:MessageEvent) => {\r\n            let newMessaages = JSON.parse(e.data)\r\n            setMessages((prevMessages) => [...prevMessages,...newMessaages])\r\n\r\n        })\r\n    },[])\r\n\r\n\r\n    return <div style={{height:'400px',overflow:'auto'}}>\r\n        {messages.map((m,index)=><Message key={index} message={m}/>)}\r\n\r\n    </div>\r\n}\r\n\r\nexport const Message:React.FC<{message:ChatMessageType}> = ({message}) => {\r\n\r\n\r\n    return <div>\r\n        <img src={message.photo} /> <b>{message.userName}</b>\r\n        <br/>\r\n        {message.message}\r\n        <hr/>\r\n    </div>\r\n}\r\n\r\nexport const AddMessageFormChat:React.FC = () => {\r\n    const [message,setMessage] = useState('')\r\n    const sendMessage = () => {\r\n        if(!message) {\r\n            return\r\n        }\r\n        wsChannel.send(message)\r\n        setMessage('')\r\n    }\r\n\r\n    return <div>\r\n        <div>\r\n        <textarea onChange={(e) =>setMessage(e.currentTarget.value) } name=\"\" ></textarea></div>\r\n        <div>\r\n        <button onClick={sendMessage}>Send</button></div>\r\n    </div>\r\n}\r\nexport default ChatPage"],"names":["wsChannel","WebSocket","Chat","Messages","AddMessageFormChat","useState","messages","setMessages","useEffect","addEventListener","e","newMessaages","JSON","parse","data","prevMessages","style","height","overflow","map","m","index","Message","message","src","photo","userName","setMessage","onChange","currentTarget","value","name","onClick","send"],"sourceRoot":""}